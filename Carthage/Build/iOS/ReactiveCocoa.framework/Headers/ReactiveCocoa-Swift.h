// Generated by Apple Swift version 1.2 (swiftlang-602.0.53.1 clang-602.0.53)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
#if __has_feature(nullability)
#  define SWIFT_NULLABILITY(X) X
#else
# if !defined(__nonnull)
#  define __nonnull
# endif
# if !defined(__nullable)
#  define __nullable
# endif
# if !defined(__null_unspecified)
#  define __null_unspecified
# endif
#  define SWIFT_NULLABILITY(X)
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import Foundation.NSURLSession;
#endif

#import <ReactiveCocoa/ReactiveCocoa.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"


/// Wraps an Action for use by a GUI control (such as <code>NSControl</code> or
/// `UIControl`), with KVO, or with Cocoa Bindings.
SWIFT_CLASS("_TtC13ReactiveCocoa11CocoaAction")
@interface CocoaAction : NSObject

/// The selector that a caller should invoke upon a CocoaAction in order to
/// execute it.
+ (SEL __null_unspecified)selector;

/// Whether the action is enabled.
///
/// This property will only change on the main thread, and will generate a
/// KVO notification for every change.
@property (nonatomic, readonly) BOOL enabled;

/// Whether the action is executing.
///
/// This property will only change on the main thread, and will generate a
/// KVO notification for every change.
@property (nonatomic, readonly) BOOL executing;

/// Attempts to execute the underlying action with the given input, subject
/// to the behavior described by the initializer that was used.
- (IBAction)execute:(id __nullable)input;
+ (BOOL)automaticallyNotifiesObserversForKey:(NSString * __nonnull)key;
@end



/// Wraps a <code>dynamic</code> property, or one defined in Objective-C, using Key-Value
/// Coding and Key-Value Observing.
///
/// Use this class only as a last resort! <code>MutableProperty</code> is generally better
/// unless KVC/KVO is required by the API you're using (for example,
/// `NSOperation`).
SWIFT_CLASS("_TtC13ReactiveCocoa15DynamicProperty")
@interface DynamicProperty : RACDynamicPropertySuperclass

/// The current value of the property, as read and written using Key-Value
/// Coding.
@property (nonatomic) id __nullable value;

/// Initializes a property that will observe and set the given key path of
/// the given object. <code>object</code> must support weak references!
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithObject:(NSObject * __nullable)object keyPath:(NSString * __nonnull)keyPath OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSError (SWIFT_EXTENSION(ReactiveCocoa))
@property (nonatomic, readonly) NSError * __nonnull nsError;
@end


@interface NSNotificationCenter (SWIFT_EXTENSION(ReactiveCocoa))
@end


@interface NSURLSession (SWIFT_EXTENSION(ReactiveCocoa))
@end


@interface RACCommand (SWIFT_EXTENSION(ReactiveCocoa))
@end


@interface RACDisposable (SWIFT_EXTENSION(ReactiveCocoa))
@end

@class NSDate;

@interface RACScheduler (SWIFT_EXTENSION(ReactiveCocoa))
@property (nonatomic, readonly) NSDate * __nonnull currentDate;
@end


@interface RACSignal (SWIFT_EXTENSION(ReactiveCocoa))
@end

#pragma clang diagnostic pop
