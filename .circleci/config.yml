version: 2.1
defaults: &defaults
  machine: true
  resource_class: frankois944/macos
  shell: /bin/bash --login
  environment:
    CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
    CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    LANG: en_US.UTF-8
jobs:
  carthage_without_swiftlint_integration:
    <<: *defaults
    steps:
      - checkout
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - restore_cache:
          keys:
            - v{{ .Environment.CACHE_VERSION }}-carthage-no-swiftlint-deps-{{ checksum "Cartfile.resolved" }}
      - run:
          name: Upgrade Carthage
          command: brew outdated carthage || brew upgrade carthage
      - run:
          name: Carthage checkout
          command: carthage checkout
      - run:
          name: Test Carthage Build before installing SwiftLint
          command: carthage build --no-skip-current --cache-builds --no-use-binaries --verbose --use-xcframeworks
      - save_cache:
          key: v{{ .Environment.CACHE_VERSION }}-carthage-no-swiftlint-deps-{{ checksum "Cartfile.resolved" }}
          paths:
            - Carthage               
  build:
    <<: *defaults
    steps:
      - checkout
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - restore_cache:
          keys:
            - v{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-dep-{{ checksum "Cartfile.resolved" }}
      - run:
          name: Set Ruby Version
          command: echo "3.1.2" > .ruby-version
      - run:
          name: Install Swiftlint
          command: brew outdated swiftlint || brew install swiftlint
      - run:
          name: Install Ruby Dependencies
          command: bundle check || bundle install
          environment:
            BUNDLE_JOBS: 4
            BUNDLE_RETRY: 3
      - run:
          name: Upgrade Carthage
          command: brew outdated carthage || brew upgrade carthage
      - run:
          name: Npm install
          command: npm install
      - run:
          name: Carthage checkout
          command: carthage checkout
      - run: 
          name: Bootstrap Carthage
          command: carthage build --use-xcframeworks --cache-builds --platform iOS,macOS,tvOS
      - save_cache:
          key: v{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-dep-{{ checksum "Cartfile.resolved" }}
          paths:
            - vendor/bundle
            - Carthage
            - node_modules
      - run: 
          name: Test on iOS
          command: rake test:ios
      - run: 
          name: Test on macOS
          command: rake test:macos
      - run:
          name: Test on tvOS
          command: rake test:tvos
      - run:
          name: Build Example Project with Carthage
          command: rake build_example
      - restore_cache:
          keys:
          - v{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-with-danger-dependencies-{{ checksum "Dangerfile.swift" }}
      - run:
          name: install Danger
          command: brew install danger/tap/danger-swift
      - run:
          name: Run Danger
          command: danger-swift ci
      - save_cache:
          key: v{{ .Environment.CACHE_VERSION }}-{{ .Branch }}-with-danger-dependencies-{{ checksum "Dangerfile.swift" }}
          paths:
            - .danger-swift
            - /opt/homebrew/Cellar/
      - run:
          name: CocoaPods Spec linting
          command: bundle exec pod lib lint --allow-warnings --platforms=ios,macos,tvos #watchos is broken right now https://github.com/CocoaPods/CocoaPods/issues/11558
      - run:
          name: Send Code Coverage to Codecov.io
          command: bash <(curl -s https://codecov.io/bash) -J Moya
      - run:
          name: Store Xcode Activity Log
          command: find $HOME/Library/Developer/Xcode/DerivedData -name '*.xcactivitylog' -exec cp {} $CIRCLE_ARTIFACTS/xcactivitylog \; || true
      - store_test_results:
          path: /tmp/circleci-test-results
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results
workflows:
  pr_build:
    jobs:
      - build
      - carthage_without_swiftlint_integration
